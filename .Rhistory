## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
data <- list("y" = y, "n" = n)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:n){
y[i] ~ dnorm(mu_j[j], invsigma2)
invsigma2 <- sigma/sqrt(n)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
data <- list("y" = y, "n" = n)
J = length(y)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_j[j], invsigma2[j])
invsigma2 <- n[j]/(sigma*sigma)
}
## priors
for (j in 1:N){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
data <- list("y" = y, "n" = n)
N = length(y)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_j[j], invsigma2[j])
invsigma2 <- n[j]/(sigma*sigma)
}
## priors
for (j in 1:N){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2 <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
library(rjags)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2 <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N, "sigma" = 5.5)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N, "sigma" = 5.5)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
samps <- coda.samples(jm, "mu_i[i]", n.iter = 10000)
samps <- coda.samples(jm, "mu", n.iter = 10000)
ests <- summary(samps, quantiles = c(.025, .975))
ests
# Chapter 10 HW Problems: 1,2,4,7,10
library(ggplot2)
library(gridExtra)
library(ProbBayes)
library(VGAM)
library(tidyverse)
library(coda)
library(reshape2)
library(ggridges)
library(rjags)
#1 mean time-to-serve for six professionals
#a) Find Murray estimate for mean time-to-serve using only his data
Murray <- 23.56
n <- 731
sigma <- 5.5
priorM <- c(20,10)
dataM <- c(Murray, sigma/n^.5)
normal_update(priorM, dataM)
qnorm(c(.05,.95), 23.56, .203)
prior <- c(20,10)
data <- c(19.9, 5.5/2925^.5)
normal_update(prior, data)
#19.9, .102
qnorm(c(.05,.95), 19.9, .102)
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
sigma
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
sigma
invsigma2 = 1/(sigma^2)
invsigma2
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
modelString("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(mu0, g0)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "n" = n, "N" = N, "invsigma2" = invsigma2, "mu0" = 20,
"g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
samps <- coda.samples(jm, "mu", n.iter = 10000)
samps <- coda.samples(jm, variable.names = "mu", n.iter = 10000)
modelString("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
modelString("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "n" = n, "N" = N, "invsigma2" = invsigma2) # "mu0" = 20, "g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
# invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "n" = n, "N" = N, "invsigma2" = invsigma2) # "mu0" = 20, "g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
# invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "N" = N, "invsigma2" = invsigma2) # "mu0" = 20, "g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
samps <- coda.samples(jm, variable.names = "mu", n.iter = 10000)
ests <- summary(samps, quantiles = c(.025, .975))
ests
inits <- list(mu = 20, invtau2 = 1/10^2)
posterior <- r.jags(cat,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_i"),
adapt = 1000,
burnin = 1000,
sample = 1000,
inits = inits)
inits <- list(mu = 20, invtau2 = 1/10^2)
posterior <- rjags(cat,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_i"),
adapt = 1000,
burnin = 1000,
sample = 1000,
inits = inits)
posterior <- rjags(cat,
n.chains = 1,
data = data,
monitor = c("mu", "tau", "mu_i"),
adapt = 1000,
burnin = 1000,
sample = 1000,
inits = inits)
sum(y)
sum(y)/N
library(bayesplot)
install.packages("bayesplot")
install.packages("bayesplot")
library(bayesplot)
mcmc_hist(samps)
Sarah
S <- 1
a <- 2
r <- 3
h <- 4
C <- 8
l <- 3
e <- 2
b <- .5
Sarah
S*a*r*a*h
C*a*l*e*b
Sarah <- S*a*r*a*h
Caleb <- C*a*l*e*b
Sarah == Caleb
Sarah == Caleb
Sarah == Caleb
Sara == Caleb
vector <- c(1,2,5,3,8)
vector <- c(1,2,5,3,8)
coefficient <- 3
vector * coefficient
sort(vector, decreasing = FALSE)
svector <- sort(vector, decreasing = FALSE)
vector *svector
coefficient <- sum(vector)
coefficient <- mean(vector)
mvector <- vector * coefficient
vector
mvector
svector
a <- 1
a <- 1
Sarah <- 21
Caleb <- 20
Sarah < Caleb
Sarah > Caleb
Sarah == Caleb
x<-0
while(x<.6){
repeat message(runif(1))
}
# Q14 by Q2
df1 <- df %>%
group_by(Q2) %>%
count(Q14) %>%
view()
library(ggplot2)
library(tidyverse)
library(rjags)
library(plyr)
library(ProbBayes)
library(bayesplot)
library(rstanarm)
library(forcats)
#Loading in dataframe and keeping important variables
df0 <- read.csv("Global_Health_data.csv") %>%
select(20,22,26,36,38:40, 43:45, 47:50) %>% view()
df <- df0[-c(1:2),] %>%
mutate(Q17 = recode(Q17,
'Strongly Agree ' = 'Strongly Agree',
'Undecided ' = 'Undecided',
'Strongly Disagree ' = 'Strongly Disagree'),
Q22 = recode(Q22,
'Strongly Agree ' = 'Strongly Agree',
'Undecided ' = 'Undecided',
'Strongly Disagree ' = 'Strongly Disagree')
) %>% view()
#Loading in dataframe and keeping important variables
df0 <- read.csv("Global_Health_data.csv") %>%
select(20,22,26,36,38:40, 43:45, 47:50) %>% view()
setwd("~/Desktop/Rock Chucks/Miscellaneous/Coding/R Projects/globalhealth")
#Loading in dataframe and keeping important variables
df0 <- read.csv("Global_Health_data.csv") %>%
select(20,22,26,36,38:40, 43:45, 47:50) %>% view()
df <- df0[-c(1:2),] %>%
mutate(Q17 = recode(Q17,
'Strongly Agree ' = 'Strongly Agree',
'Undecided ' = 'Undecided',
'Strongly Disagree ' = 'Strongly Disagree'),
Q22 = recode(Q22,
'Strongly Agree ' = 'Strongly Agree',
'Undecided ' = 'Undecided',
'Strongly Disagree ' = 'Strongly Disagree')
) %>% view()
#Task 2 -  T test of answers on Q18 by splitting on answers of Q14
#Bar Graph of Q18
df18 <- df %>%
filter(Q18 != "") %>%
view()
ggplot(df18) +
geom_bar(aes(Q18), fill = 'cornsilk3') +
labs(title = "Are there enough Global Health Opportunities?",
y = "total votes")
ggplot(df18) +
geom_bar(aes(Q18), fill = 'cornsilk2') +
labs(title = "Are there enough Global Health Opportunities?",
y = "total votes")
ggplot(df18) +
geom_bar(aes(Q18), fill = 'cornsilk4') +
labs(title = "Are there enough Global Health Opportunities?",
y = "total votes")
ggplot(df18) +
geom_bar(aes(Q18), fill = 'cornsilk1') +
labs(title = "Are there enough Global Health Opportunities?",
y = "total votes")
ggplot(df18) +
geom_bar(aes(Q18), fill = 'cornsilk3') +
labs(title = "Are there enough Global Health Opportunities?",
y = "total votes")
#Bar Graph of Q14
df14 <- df %>%
filter(Q14 != "") # %>% view()
Q14_Graph <- ggplot(df14, aes(Q14)) +
geom_bar(fill = 'cornsilk3') +
labs(title = "Global Health Career Interest?", y = "Options")
ggplot(df18) +
geom_bar(aes(Q18), fill = 'cornsilk3') +
labs(title = "Are there enough Global Health Opportunities?",
y = "total votes")
Q14_Graph <- ggplot(df14, aes(Q14)) +
geom_bar(fill = 'cornsilk3') +
labs(title = "Global Health Career Interest?", y = "Options")
Q14_Graph <- ggplot(df14, aes(Q14)) +
geom_bar(fill = 'cornsilk3') +
labs(title = "Global Health Career Interest?", y = "Options") %>% view()
Q14_Graph
# df of those interested in global health
Interested_df18 <- DF18 %>%
filter(Q14 == 1) %>%
view()
source("~/Desktop/Rock Chucks/Miscellaneous/Coding/R Projects/globalhealth/Global Health Code.R")
df17 %>%
mutate(Q17 = factor(Q17, levels=c("Strongly Agree", "Agree", "Undecided",
"Disagree", "Strongly Disagree"))) %>%
ggplot(aes(Q17)) +
geom_bar(fill = "cornsilk3") +
labs(title = "Should all Pre-med students take a global health class?",
y = "total votes")
ggplot(New_df17, aes(Q14, Q17, color = Q14)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 8, outlier.size = 3) +
labs(x = "Are you interested in pursuing a career in global health?",
y = "Pre-Meds should take class",
title = "Global Health pursual vs class requirements")
# dotplot of the data
ggplot(New_df17, aes(Q14, Q17, color = Q14)) +
geom_violin(trim = FALSE) +
geom_jitter(shape=16, position=position_jitter(0.05)) +
labs(x = "Are you interested in pursuing a career in global health?",
y = "Pre-Meds should take class",
title = "Global Health pursual vs class requirements")
source("~/Desktop/Rock Chucks/Miscellaneous/Coding/R Projects/globalhealth/Global Health Code Regression.R")
# Q2 with Q14 (Global Health Career Interest by Education)
ggplot(df) +
geom_bar(aes(Q2, fill = Q14), position = "dodge") +
labs(title = "Global Health Career Interest by Education", x = "Years")
# Q3 with Q14 (Global Health Career Interest by Age)
ggplot(df) +
geom_bar(aes(Q3 , fill = Q14), position = "dodge") +
labs(title = "Global Health Career Interest by Age Range", x = "Age Range")
# Q10 with Q14
ggplot(df) +
geom_bar(aes(Q10 , fill = Q14), position = "dodge") +
labs(title = "Global Health Career Interest by Born outside US", x = "Born outside US?")
# Q12 with Q14
ggplot(df) +
geom_bar(aes(Q12 , fill = Q14), position = "dodge") +
labs(title = "Global Health Career Interest by living outside the US", x = "Lived outside US?")

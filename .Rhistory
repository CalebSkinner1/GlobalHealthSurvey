ggplot(data.frame(P90 = P90), aes(P90)) +
geom_density()
sigma <- 1 / sqrt(out[, 2])
quantile(sigma, c(0.05, 0.95))
normal_update(prior, data)
Murray <- 23.56
n <- 731
Stdev <- 5.5
prior <- c(20,10)
data <- c(Murray, Stdev/n^.5)
normal_update(prior, data)
library(ggplot2)
library(gridExtra)
library(ProbBayes)
library(VGAM)
library(tidyverse)
library(coda)
library(reshape2)
library(ggridges)
library(runjags)
Murray <- 23.56
n <- 731
Stdev <- 5.5
prior <- c(20,10)
data <- c(Murray, Stdev/n^.5)
normal_update(prior, data)
#23.56, 2.03
qnormal(c(.05,.95), normal_update)
#23.56, 2.03
qnorm(c(.05,.95), normal_update)
#23.56, 2.03
qnorm(c(.05,.95), 23.56, 2.03)
#b) Find overall mean time-to-serve assuming there is no difference among players
prior <- c(20,10)
data <- c(19.9, 5.5/2925^.5)
normal_update(prior, data)
#19.9, .102
qnorm(c(.05,.95), 19.9, .102)
setwd("~/Class Materials/Bayes Undergrad/Spring 2022/Data and code")
library(runjags)
install.packages(rjags)
install.packages("rjags")
library(rjags)
jm <- jags.model("Time-to-Serve", data = data, quiet = TRUE)
set.seed(1)
n <- 30
x <- rbinom(n, size = 1, prob = .75)
x
library(rjags)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:n){
y[i] ~ dnorm(mu_j[j], invsigma2)
invsigma2 <- sigma/sqrt(n)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
data <- list("y" = y, "n" = n)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:n){
y[i] ~ dnorm(mu_j[j], invsigma2)
invsigma2 <- sigma/sqrt(n)
}
## priors
for (j in 1:j){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
data <- list("y" = y, "n" = n)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:n){
y[i] ~ dnorm(mu_j[j], invsigma2)
invsigma2 <- sigma/sqrt(n)
}
## priors
for (j in 1:J){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
data <- list("y" = y, "n" = n)
J = length(y)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_j[j], invsigma2[j])
invsigma2 <- n[j]/(sigma*sigma)
}
## priors
for (j in 1:N){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
data <- list("y" = y, "n" = n)
N = length(y)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_j[j], invsigma2[j])
invsigma2 <- n[j]/(sigma*sigma)
}
## priors
for (j in 1:N){
mu_j[j] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2 <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
library(rjags)
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2 <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N, "sigma" = 5.5)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
data <- list("y" = y, "n" = n, "N" = N, "sigma" = 5.5)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
samps <- coda.samples(jm, "mu_i[i]", n.iter = 10000)
samps <- coda.samples(jm, "mu", n.iter = 10000)
ests <- summary(samps, quantiles = c(.025, .975))
ests
# Chapter 10 HW Problems: 1,2,4,7,10
library(ggplot2)
library(gridExtra)
library(ProbBayes)
library(VGAM)
library(tidyverse)
library(coda)
library(reshape2)
library(ggridges)
library(rjags)
#1 mean time-to-serve for six professionals
#a) Find Murray estimate for mean time-to-serve using only his data
Murray <- 23.56
n <- 731
sigma <- 5.5
priorM <- c(20,10)
dataM <- c(Murray, sigma/n^.5)
normal_update(priorM, dataM)
qnorm(c(.05,.95), 23.56, .203)
prior <- c(20,10)
data <- c(19.9, 5.5/2925^.5)
normal_update(prior, data)
#19.9, .102
qnorm(c(.05,.95), 19.9, .102)
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
sigma
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
sigma
invsigma2 = 1/(sigma^2)
invsigma2
y <- c(23.56, 18.07, 16.21, 21.70, 22.32, 14.11)
n <- c(731, 570, 491, 456, 403, 274)
modelString("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(mu0, g0)
invtau2 ~ dgamma(a_t, b_t)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "n" = n, "N" = N, "invsigma2" = invsigma2, "mu0" = 20,
"g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
samps <- coda.samples(jm, "mu", n.iter = 10000)
samps <- coda.samples(jm, variable.names = "mu", n.iter = 10000)
modelString("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
modelString("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "n" = n, "N" = N, "invsigma2" = invsigma2) # "mu0" = 20, "g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
# invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "n" = n, "N" = N, "invsigma2" = invsigma2) # "mu0" = 20, "g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
cat("
model {
## sampling
for (i in 1:N){
y[i] ~ dnorm(mu_i[i], invsigma2[i])
# invsigma2[i] <- n[i]/(sigma*sigma)
}
## priors
for (i in 1:N){
mu_i[i] ~ dnorm(mu, invtau2)
}
## hyperpriors
mu ~ dnorm(20, 1/.001)
invtau2 ~ dgamma(.1, .1)
tau <- sqrt(pow(invtau2, -1))
}
", file = "normal-normal-gamma.jags")
N = length(y)
sigma <- c(5.5/sqrt(n[1]), 5.5/sqrt(n[2]), 5.5/sqrt(n[3]), 5.5/sqrt(n[4]),
5.5/sqrt(n[5]), 5.5/sqrt(n[6]))
invsigma2 = 1/(sigma^2)
data <- list("y" = y, "N" = N, "invsigma2" = invsigma2) # "mu0" = 20, "g0" = 1/0.001, "a_t" = 0.1, "b_t" = 0.1)
jm <- jags.model("normal-normal-gamma.jags", data = data, quiet = TRUE)
samps <- coda.samples(jm, variable.names = "mu", n.iter = 10000)
ests <- summary(samps, quantiles = c(.025, .975))
ests
inits <- list(mu = 20, invtau2 = 1/10^2)
posterior <- r.jags(cat,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_i"),
adapt = 1000,
burnin = 1000,
sample = 1000,
inits = inits)
inits <- list(mu = 20, invtau2 = 1/10^2)
posterior <- rjags(cat,
n.chains = 1,
data = the_data,
monitor = c("mu", "tau", "mu_i"),
adapt = 1000,
burnin = 1000,
sample = 1000,
inits = inits)
posterior <- rjags(cat,
n.chains = 1,
data = data,
monitor = c("mu", "tau", "mu_i"),
adapt = 1000,
burnin = 1000,
sample = 1000,
inits = inits)
sum(y)
sum(y)/N
library(bayesplot)
install.packages("bayesplot")
install.packages("bayesplot")
library(bayesplot)
mcmc_hist(samps)
Sarah
S <- 1
a <- 2
r <- 3
h <- 4
C <- 8
l <- 3
e <- 2
b <- .5
Sarah
S*a*r*a*h
C*a*l*e*b
Sarah <- S*a*r*a*h
Caleb <- C*a*l*e*b
Sarah == Caleb
Sarah == Caleb
Sarah == Caleb
Sara == Caleb
library(tidyverse)
library(ProbBayes)
library(mcmcr)
library(readxl)
library(runjags)
library(ggplot2)
df <-read.csv("Global_Health_data.csv")
setwd("~/Documents/globalhealth")
df <-read.csv("Global_Health_data.csv")
df <- subset(df, select = c(20,22,26,36,38:40, 43:45, 47:50))
df <- df[-c(1:2),]
view(df)
# filter the data
df <- subset(df, df$Q14 != "")
df <- subset(df, df$Q2 != "")
df <- subset(df, df$Q3 != "")
df <- subset(df, df$Q10 != "")
df <- subset(df, df$Q12 != "")
view(df)
# put data into proper form
scores = c("1st year" = 1, "2nd year" = 2, "3rd year" = 3, "4th year" = 4, "5th year" = 5)
df$Q2. <- scores[as.factor(df$Q2)]
response = c("Yes" = 0, "Unsure" = 1, "No" = 2)
df$Q14. <- response[as.factor(df$Q14)]
age = c("18-20" = 0, "21-23" = 1, "24-26" = 2)
df$Q3. <- age[as.factor(df$Q3)]
df <- mutate(df, Q10. = ifelse(Q10 == "Yes", 1, 0))
df <- mutate(df, Q12. = ifelse(Q12 == "Yes", 1, 0))
view(df)
# plots
# Bar Graph of Q14
ggplot(data=df, aes(x = df$Q14)) + geom_bar(fill = 'blue')
# Bar Graph of Q2
ggplot(data=df, aes(x = df$Q2)) + geom_bar(fill = 'blue')
# Bar Graph of Q3
ggplot(data=df, aes(x = df$Q3)) + geom_bar(fill = 'blue')
ggplot(data=df, aes(x = df$Q14)) + geom_bar(fill = 'blue')
ggplot(data=df, aes(x = df$Q14)) + geom_bar(fill = 'blue') +
labs(title = "Global Health Career Interest?", x = "Responses")
ggplot(data=df, aes(x = df$Q2)) + geom_bar(fill = 'blue')
ggplot(data=df, aes(x = df$Q2)) + geom_bar(fill = 'blue') +
labs(title = "Education", x = "Years")
# Bar Graph of Q3
ggplot(data=df, aes(x = df$Q3)) + geom_bar(fill = 'blue')
# Bar Graph of Q3
ggplot(data=df, aes(x = df$Q3)) + geom_bar(fill = 'blue') +
labs(title = "Age?", x = "Age Range")
# Bar Graph of Q10
ggplot(data=df, aes(x = df$Q10)) + geom_bar(fill = 'blue')
ggplot(data=df, aes(x = df$Q10)) + geom_bar(fill = 'blue') +
labs(title = "Were you born in the United States?", x = "Responses")
ggplot(data=df, aes(x = df$Q10)) + geom_bar(fill = 'blue') +
labs(title = "Were you born outside the United States?", x = "Responses")
ggplot(data=df, aes(x = df$Q12)) + geom_bar(fill = 'blue')  +
labs(title = "Have you lived outside the United States?", x = "Responses")
ggplot(df, aes(x=Q2 , col = Q14)) + geom_bar()
ggplot(df, aes(x=Q2 , col = Q14)) + geom_bar() +
labs(title = "Global Health Career Interest by Education", x = "Years")
ggplot(df, aes(x=Q3 , col = Q14)) + geom_bar() +
labs(title = "Global Health Career Interest by Age Range", x = "Age Range")
# Q10 with Q14
ggplot(df, aes(x=Q10 , col = Q14)) + geom_bar() +
labs(title = "Global Health Career Interest by Born outside US", x = "Born outside US?")
# Q12 with Q14
ggplot(df, aes(x=Q12 , col = Q14)) + geom_bar() +
labs(title = "Global Health Career Interest by living outside the US", x = "Lived outside US?")
# Frequentest Regression
model <- lm(Q14. ~ Q2. + Q3. + Q10. + Q12., data=df)
summary(model)
